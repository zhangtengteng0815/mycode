第1章：计算机系统漫游
    1.1 信息就是位+上下文
        8个位组织成一组，称为字节
        ASCII、Unicode、UTF-8的区别
    1.2 程序被其他程序翻译成不同的格式
        编译系统：
            预处理：预处理器（cpp）根据以字符#开头的命令，修改原始的c程序。比如#include<stdio.h>命令告诉预处理器
                    读取系统头文件stdio.h的内容，并把它直接插入程序文本中。结果得到另一个c程序，以.i作为文件扩展名。
            编译器：编译器（ccl）将文本文件hello.i翻译成文本文件hello.s，它包含一个汇编语言程序。
            汇编器：汇编器（as）将hello.s翻译成机器语言指令，把这些指令打包成一种叫做可重定位目标程序（relocatable object program）的格式，
                    并将结果保存在目标文件hello.o中。hello.o是一个二进制文件。
            链接器：连接器（ld）负责将.o文件合并，生成一个可执行目标文件，可以被加载到内存中，由系统执行。
    1.3 了解编译系统如何工作是大有益处的
        优化程序性能
        理解链接时出现错误
        避免安全漏洞
    1.4 处理器读并解释储存在内存中的指令
        shell执行可执行程序
        1.4.1 系统的硬件组成
            总线：携带信息字节并负责在各个部件间传递。其传送定长字节块，也就是字（word）。字中的字节数（字长）是一个基本的系统参数，机器字长要么是4字节（32位），要么是8字节（64位）。
            I/O设备：输入输出设备是系统与外部世界的联系通道。
            主存：是一个临时存储设备，在处理器执行程序时，用来存放程序和程序处理的数据。
                物理上，主存是一组动态随机存取存储器（DRAM）芯片组成。
                逻辑上，存储器是一个线性的字节数组，每个字节都有其唯一的地址（数组索引），地址从零开始。
                组成程序的每条机器指令都由不同数量的字节构成。与c程序变量相对应的数据项的大小是根据类型变化的。
            处理器：解释或执行存储在主存中指令的引擎。核心是一个大小为一个字的存储设备（或寄存器），称为程序计数器（PC）
                操作围绕着主存、寄存器文件和算术/逻辑单元（ALU）进行：
                    加载：从主存复制一个字或字节到寄存器
                    存储：从寄存器复制一个字或字节到主存的某个位置
                    操作：把两个寄存器的内容复制到ALU，ALU对这两个字做算术运算，并将结果存放到一个寄存器中，以覆盖该寄存器中原来的内容
                    跳转：从指令本身中抽取一个字，将这个字复制到程序计数器（PC）中，以覆盖PC中原来的值
        1.4.2 运行hello程序
    1.5 高速缓存至关重要
    1.6 存储设备形成层次结构
        存储器层次结构主要思想是上一层的存储器作为低一层存储器的高速缓存
    1.7 操作系统管理硬件
        所有应用程序对硬件的操作尝试必须通过操作系统
        操作系统基本功能：（1）防止硬件被失控的应用程序滥用（2）向应用程序提供简单一致的机制来控制复杂而又通常大不相同的低级硬件设备
        1.7.1 进程
            一个进程到另一个进程的转换是由操作系统内核管理的
            内核是操作系统代码常驻主存的部分
            内核是系统管理全部进程所用代码和数据结构的集合
        1.7.2 线程
        1.7.3 虚拟内存
            程序代码和数据
            堆
            共享库
            栈
            内核虚拟内存
        1.7.4 文件
            文件就是字节序列，每个I/O设备都可以看成是文件
    1.8 系统之间利用网络通信
    1.9 重要主题
        1.9.1 Amdahl定律
        1.9.2 并发和并行
            线程级并发
            指令级并行
            单指令、多数据并行
        1.9.3 计算机系统中抽象的重要性
    1.10 小结

第一部分 程序结构和执行
    第2章 信息的表示和处理
        2.1 信息存储
            8位的块或者字节
            内存的每个字节都是由一个唯一的数字来标识，称为它的地址
            所有可能地址的集合就称为虚拟地址空间
            2.1.1 十六进制表示法
                十六进制转二进制----每4位一组进行转化
                十进制转十六进制
            2.1.2 字数据大小
                32位字长和64位字长
            2.1.3 寻址和字节顺序
                多字节对象都被存储为连续的字节序列，对象的地址为所使用字节中最小的地址
                小端法：最低有效字节在最前面的方式
                大端法：最高有效字节在最前面的方式
            2.1.4 表示字符串
                字符串被编码为一个以null（其值为0）字符结尾的字符数组
            2.1.5 表示代码
                不同机器类型使用不用的且不兼容的指令和编码方式，即使完全一样的进程，运行在不同的操作系统上也会有不同的编码规则，因此二进制代码是不兼容的
            2.1.6 布尔代数简介
            2.1.7 c语言中的位级运算
                | OR(或)  & AND(与) ~ NOT(取反) ^ EXCLUSIVE-OR(异或)
            2.1.8 c语言中的逻辑运算
                ||  &&  ！
            2.1.9 c语言中的位移运算
                <<  >>
        2.2 整数表示
            2.2.1 整数数据类型
            2.2.2 无符号数的编码
            2.2.3 补码编码
                最高位解释为负权
            2.2.4 有符号数和无符号数之间的转换


























































































