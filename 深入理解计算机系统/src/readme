第一章：计算机系统漫游
    1.1 信息就是位+上下文
        8个位组织成一组，称为字节
        ASCII、Unicode、UTF-8的区别
    1.2 程序被其他程序翻译成不同的格式
        编译系统：
            预处理：预处理器（cpp）根据以字符#开头的命令，修改原始的c程序。比如#include<stdio.h>命令告诉预处理器
                    读取系统头文件stdio.h的内容，并把它直接插入程序文本中。结果得到另一个c程序，以.i作为文件扩展名。
            编译器：编译器（ccl）将文本文件hello.i翻译成文本文件hello.s，它包含一个汇编语言程序。
            汇编器：汇编器（as）将hello.s翻译成机器语言指令，把这些指令打包成一种叫做可重定位目标程序（relocatable object program）的格式，
                    并将结果保存在目标文件hello.o中。hello.o是一个二进制文件。
            链接器：连接器（ld）负责将.o文件合并，生成一个可执行目标文件，可以被加载到内存中，由系统执行。
    1.3 了解编译系统如何工作是大有益处的
        优化程序性能
        理解链接时出现错误
        避免安全漏洞
    1.4 处理器读并解释储存在内存中的指令
        shell执行可执行程序
        1.4.1 系统的硬件组成
            总线：携带信息字节并负责在各个部件间传递。其传送定长字节块，也就是字（word）。字中的字节数（字长）是一个基本的系统参数，机器字长要么是4字节（32位），要么是8字节（64位）。
            I/O设备：输入输出设备是系统与外部世界的联系通道。
            主存：是一个临时存储设备，在处理器执行程序时，用来存放程序和程序处理的数据。
                物理上，主存是一组动态随机存取存储器（DRAM）芯片组成。
                逻辑上，存储器是一个线性的字节数组，每个字节都有其唯一的地址（数组索引），地址从零开始。
                组成程序的每条机器指令都由不同数量的字节构成。与c程序变量相对应的数据项的大小是根据类型变化的。
            处理器：解释或执行存储在主存中指令的引擎。核心是一个大小为一个字的存储设备（或寄存器），称为程序计数器（PC）
                操作围绕着主存、寄存器文件和算术/逻辑单元（ALU）进行：
                    加载：从主存复制一个字或字节到寄存器
                    存储：从寄存器复制一个字或字节到主存的某个位置
                    操作：把两个寄存器的内容复制到ALU，ALU对这两个字做算术运算，并将结果存放到一个寄存器中，以覆盖该寄存器中原来的内容
                    跳转：从指令本身中抽取一个字，将这个字复制到程序计数器（PC）中，以覆盖PC中原来的值
        1.4.2 运行hello程序






































































